
function initialise_results(nr,nsteps)
% Initialises the varibales that contains the statistics of the simulation
 global  IT_STATS ENV_DATA
% Arrays for storing variables per iteration:
 IT_STATS=struct('waggleDanceA',[zeros(1,nsteps+1);],...
                'waggleDanceB',[zeros(1,nsteps+1);],...
                'atSourceA',[zeros(1,nsteps+1);],...
                'atSourceB',[zeros(1,nsteps+1);],...
                'atHive',[zeros(1,nsteps+1);],...
                'commitedA',[zeros(1,nsteps+1);],...
                'commitedB',[zeros(1,nsteps+1);],...
                'recruits',[zeros(1,nsteps+1);],...
                'tot_b',[zeros(1,nsteps+1)],...
                'Afood',[zeros(1,nsteps+1)],...
                'Bfood',[zeros(1,nsteps+1)],...
                'tfood',[zeros(1,nsteps+1)]);	
            
 % The total amount of food in the environment
 totalFood=length(find(ENV_DATA.environment==1)); 
 % Total amount of food at source A and B
 tFoodA=length(find(ENV_DATA.environment(ENV_DATA.sourceApos(2,1):ENV_DATA.sourceApos(2,2),...
     ENV_DATA.sourceApos(1,1):ENV_DATA.sourceApos(1,2))==1));
 tFoodB=length(find(ENV_DATA.environment(ENV_DATA.sourceBpos(2,1):ENV_DATA.sourceBpos(2,2),...
     ENV_DATA.sourceBpos(1,1):ENV_DATA.sourceBpos(1,2))==1));
 
 IT_STATS.Afood(1)=tFoodA; % Total amount of food at source A
 IT_STATS.Bfood(1)=tFoodB; % Total amount of food at source B
 IT_STATS.tfood(1)=totalFood; % Total amount of food
 IT_STATS.tot_b(1)=nr; % Total number of bees
 
 
      